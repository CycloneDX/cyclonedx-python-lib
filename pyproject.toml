[tool.poetry]
name = "cyclonedx-python-lib"
version = "0.10.2"
description = "A library for producing CycloneDX SBOM (Software Bill of Materials) files."
authors = ["Paul Horton <phorton@sonatype.com>"]
maintainers = ["Paul Horton <phorton@sonatype.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/CycloneDX/cyclonedx-python-lib"
repository = "https://github.com/CycloneDX/cyclonedx-python-lib"
packages = [
    { include = "cyclonedx" }
]
include = [
    "LICENSE"
]
classifiers = [
    # Trove classifiers - https://packaging.python.org/specifications/core-metadata/#metadata-classifier
    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Legal Industry',
    'Intended Audience :: System Administrators',
    'Topic :: Security',
    'Topic :: Software Development',
    'Topic :: System :: Software Distribution',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Typing :: Typed'
]
keywords = [
    "BOM", "SBOM", "SCA", "OWASP"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/CycloneDX/cyclonedx-python-lib/issues"

[tool.poetry.dependencies]
python = "^3.6"
packageurl-python = "^0.9.4"
requirements_parser = "^0.2.0"
setuptools = "^50.3.2"
importlib-metadata = { version = "^4.8.1", python = "~3.6 | ~3.7" }
toml = "^0.10.2"
typing-extensions = { version = "^3.10.0", python = "~3.6 | ~3.7" }

[tool.poetry.dev-dependencies]
tox = "^3.24.3"
coverage = "^6.1"
flake8 = "^3.9.2"
pdoc3 = "^0.10.0"
mypy = "^0.910"
flake8-annotations = "^2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = [
    "pyproject.toml:version"
]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
